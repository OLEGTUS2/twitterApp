{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","styled","div","useStyles","makeStyles","theme","root","display","margin","spacing","orange","color","palette","getContrastText","deepOrange","backgroundColor","purple","deepPurple","AppHeader","liked","allPosts","classes","Avatar","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","key","outline","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","itemsProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","AppBlock","App","data","deleteItem","addItem","maxId","index","findIndex","elem","slice","body","newItem","old","items","length","indexOf","visiblePosts","filterPosts","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d462fe25.chunk.js","sourcesContent":["import React from 'react';\n\nimport './app-header.css';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar } from '@material-ui/core';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\n\n\n\n\nconst Header = styled.div`\n    display: flex;\n    align-items: flex-end;\n    justify-content: space-between;\n    h1 {\n        font-size: 26px;\n        : hover {\n            color: red;\n        }\n    }\n    h2 {\n        font-size: 1.2rem;\n        color: grey;\n    }\n`\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    orange: {\n      color: theme.palette.getContrastText(deepOrange[500]),\n      backgroundColor: deepOrange[500],\n    },\n    purple: {\n      color: theme.palette.getContrastText(deepPurple[500]),\n      backgroundColor: deepPurple[500],\n    },\n  }));\n\nconst AppHeader = ({liked, allPosts}) => {\n    const classes = useStyles();\n    return ( \n        <Header >\n            <h1>ALEH TSIUSIANKOU</h1>\n            <Avatar className={classes.orange}>AT</Avatar>\n            <h2>{allPosts} notes, liked {liked} </h2>\n        </Header>\n       \n    )\n}\n\n\n\nexport default AppHeader;\n","import AppHeader from './app-header';\nexport default AppHeader;\n","import SearchPanel from './search-panel';\nexport default SearchPanel;","import React, {Component} from 'react';\n\nimport './search-panel.css'\n\nexport default class SearchPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            term: ''\n        }\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    }\n\n    onUpdateSearch(e) {\n        const term = e.target.value;\n        this.setState({term});\n        this.props.onUpdateSearch(term);\n    }\n\n    render() {\n        return (\n            <input\n                className=\"form-control search-input\"\n                type=\"text\"\n                placeholder=\"Search notes\"\n                onChange={this.onUpdateSearch}\n            />\n        )\n    }\n}\n\n","import PostStatusFilter from './post-status-filter';\nexport default PostStatusFilter;","import React, {Component} from 'react';\n// import { Button } from 'reactstrap';\nimport './post-status-filter.css'\n\nexport default class PostStatusFilter extends Component {\n    constructor(props) {\n        super(props);\n        this.buttons =  [\n            {name: 'all', label: 'All'},\n            {name: 'like', label: 'Liked'}\n        ]\n    }\n    render() {\n        const buttons = this.buttons.map(({name, label}) => {\n            const {filter, onFilterSelect} = this.props;\n            const active = filter === name;\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\n            return (\n                <button \n                    key={name} \n                    type=\"button\" \n                    outline color=\"info\" \n                    className={`btn ${clazz}`}\n                    onClick={() => onFilterSelect(name)}>{label}</button>\n            )\n        });\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        )\n    }\n}\n\n","import PostListItem from './post-list-item';\nexport default PostListItem;","import React, {Component}  from 'react';\n\nimport './post-list-item.css';\n\nexport default class PostListItem  extends Component {\n\n    render() {\n\n        const  {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;\n        \n\n        let classNames = 'app-list-item d-flex justify-content-between';\n\n        if(important) {\n            classNames += ' important'\n        }\n        if(like) {\n            classNames += ' like'\n        }\n\n        return (\n            <div className={classNames}>\n                <span \n                className=\"app-list-item-label\"\n                onClick={onToggleLiked}>\n                    {label}\n                </span>\n                <div className=\"d-flex justify-content-center align-items-center\">\n                    <button\n                    type=\"button\"\n                    className=\"btn-star btn-sm\"\n                    onClick={onToggleImportant}>\n                        <i className=\"fa fa-star\"></i>\n                    </button>\n                    <button \n                    type=\"button\"\n                    className=\"btn-trash btn-sm\"\n                    onClick={onDelete}>\n                        <i className=\"fa fa-trash-o\"></i>\n                    </button>\n                    <i className=\"fa fa-heart\"></i>\n                </div>\n             </div>\n        )\n    }\n}\n","import PostList from './post-list';\nexport default PostList;","import React from 'react';\n\nimport PostListItem from '../post-list-item';\nimport { ListGroup } from 'reactstrap';\n\nimport './post-list.css';\n\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\n    const elements = posts.map((item) => {\n        const {id, ...itemsProps} = item;\n        return (\n            <li key= {id} className='list-group-item'>\n                {/* {...item} */}\n                {/* <PostListItem \n                label={item.label}\n                important={item.important}/> */}\n                <PostListItem \n                    {...itemsProps}\n                    onDelete={() => onDelete(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleLiked={() => onToggleLiked(id)}/>\n            </li>\n        )\n    });\n\n    return (\n        <ListGroup  className = \"app-list \">\n            {elements}\n        </ListGroup>\n    )\n}\n\nexport default PostList;","import PostAddForm from './post-add-form';\nexport default PostAddForm;","import React, {Component} from 'react';\n\nimport './post-add-form.css'\n\nexport default class  PostAddForm extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: ''\n        }\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onValueChange(e) {\n        this.setState({\n            text: e.target.value\n        }); \n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.props.onAdd(this.state.text)\n        this.setState({\n            text: ''\n        });\n    }\n        \n    render() {\n        return (\n            <form \n                className=\"bottom-panel d-flex\"\n                onSubmit={this.onSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"What are you thinking now??\"\n                    className=\"form-control new-post-label\"\n                    onChange={this.onValueChange}\n                    value={this.state.text}\n                />\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-secondary\">\n                    Add</button>\n            </form>\n        )\n    }\n}\n","import React, {Component} from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport PostStatusFilter from '../post-status-filter';\nimport PostList from '../post-list';\nimport PostAddForm from '../post-add-form';\n\nimport './app.css';\nimport styled from 'styled-components';\n\nconst AppBlock = styled.div`\n    margin: 0 auto;\n    max-width: 800px;\n`\n\nexport default class App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                // {label: 'Going to learn React!', important: true, like: false, id: 1},\n                // {label: 'That is so good!', important: false, like: false, id: 2},\n                // {label: 'I need a break!', important: false, like: false, id: 3}\n            ],\n            term: '',\n            filter: 'all'\n        };\n        this.deleteItem = this.deleteItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.onToggleImportant = this.onToggleImportant.bind(this);\n        this.onToggleLiked = this.onToggleLiked.bind(this);\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n        this.onFilterSelect = this.onFilterSelect.bind(this);\n\n        this.maxId = 4;\n    }\n\n    deleteItem(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n\n            return {\n                data: newArr\n            }\n\n        });\n    }\n\n    addItem(body) {\n        const newItem = {\n            label: body,\n            important: false,\n            id: this.maxId++\n        }\n        this.setState(({data}) => {\n            const newArr = [...data, newItem];\n            return {\n                data: newArr\n            }\n        });\n    }\n\n    onToggleImportant(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const old = data[index];\n            const newItem = {...old, important: !old.important};\n\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n\n            return {\n                data: newArr\n            }\n        });\n    }\n\n    onToggleLiked(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const old = data[index];\n            const newItem = {...old, like: !old.like};\n\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n\n            return {\n                data: newArr\n            }\n        });\n    }\n\n    searchPost(items, term) {\n        if(term.length === 0) {\n            return items\n        }\n        return items.filter((item) => {\n            return item.label.indexOf(term) > -1\n        });\n    }\n\n    filterPosts(items, filter) {\n        if(filter === 'like') {\n            return items.filter(item => item.like)\n        }else {\n            return items\n        }\n\n    }\n\n    onUpdateSearch(term) {\n        this.setState({term})\n    }\n\n    onFilterSelect(filter) {\n        this.setState({filter})\n    }\n\n    render() {\n        const {data, term, filter} = this.state;\n        const liked = data.filter(item => item.like).length;\n        const allPosts = data.length;\n        const visiblePosts = this.filterPosts(this.searchPost(data, term), filter);\n\n        return (\n            <AppBlock>\n                 <AppHeader\n                 liked={liked}\n                 allPosts={allPosts}/>\n                 <div className=\"search-panel d-flex\">\n                     <SearchPanel\n                        onUpdateSearch={this.onUpdateSearch}/>\n                     <PostStatusFilter\n                     filter={filter}\n                     onFilterSelect={this.onFilterSelect}/>\n                 </div>\n                 <PostAddForm\n                    onAdd={this.addItem}/>\n                 <PostList\n                     posts={visiblePosts}\n                     onDelete ={this.deleteItem}\n                     onToggleImportant={this.onToggleImportant}\n                     onToggleLiked={this.onToggleLiked}/>  \n            </AppBlock>\n         )\n    }\n}\n","import App from './app'\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app/';\n\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n"],"sourceRoot":""}